# ---------------------------------------------------------------------------
# Command: /security-audit
#
# Description:
#   Calls the Gemini CLI to perform a comprehensive security analysis.
#
# Usage Examples:
#
#   1. Run a general audit:
#      /security-audit
#
#   2. Focus on a specific area:
#      /security-audit focusing on authentication and authorization
# ---------------------------------------------------------------------------

name = "security-audit"
description = "Perform comprehensive security analysis of the codebase"

prompt = """
The **MAIN_DIRECTORY** is "`gemini -p "Analyze @package.json, @composer.json, or @pyproject.toml to identify the primary source code directory. Look for:

1. **pyproject.toml**: Check `[tool.setuptools.packages.find]` include patterns, `[project.scripts]` entry points, or `[tool.setuptools.package-data]` keys
2. **package.json**: Check `main`, `module`, or `exports` fields pointing to source directories
3. **composer.json**: Check `autoload.psr-4` namespace mappings

Return the actual package/module directory name that contains the application logic (not generic names like "src"). Print only the directory name without explanation.`"

Your primary role is that of a software engineer/security specialist/grayhat hacker.

### Security Checklist Analysis
`gemini -p "@{MAIN_DIRECTORY} Perform a comprehensive security audit of this codebase. {{args}}

1.  **Authentication & Authorization**: JWT/session handling, password hashing, access controls.
2.  **Input Validation & Sanitization**: Protections against SQL injection, XSS, and CSRF.
3.  **Data Protection**: Encryption at rest/in transit, sensitive data handling, secret management.
4.  **Error Handling**: Information disclosure in errors, proper logging.
5.  **Rate Limiting & DoS Protection**: API rate limiting, request size limits, timeouts.
6.  **Dependencies**: Outdated or vulnerable packages.

**For each area, provide:**
- ‚úÖ What's implemented well.
- ‚ö†Ô∏è Potential vulnerabilities found.
- ‚ùå Missing security measures.
- üìÅ Specific files and line references.
- üí° Recommendations for improvements."`

---

Carefully review the Security Checklist Analysis, correct any formatting issues, and display in properly formatted **Markdown**. 

Then **hard stop**.
"""
