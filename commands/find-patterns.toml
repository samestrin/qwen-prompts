# ---------------------------------------------------------------------------
# Command: /find-patterns
#
# Description:
#   Calls the Gemini CLI to find all instances of a specific coding pattern.
#
# Usage Examples:
#
#   1. Find a pattern in default directories ('src/'):
#      /find-patterns Find all instances of React hooks usage in the @src/ directory
#
#   2. Find a pattern in a specific directory:
#      /find-patterns Find all instances of async/await error handling in the @./api/v1/ directory
# ---------------------------------------------------------------------------

name = "find-patterns"
description = "Find specific coding patterns, anti-patterns, or code smells in the codebase"

prompt = """
The **MAIN_DIRECTORY** is "`gemini -p "Analyze @package.json, @composer.json, or @pyproject.toml to identify the primary source code directory. Look for:

1. **pyproject.toml**: Check `[tool.setuptools.packages.find]` include patterns, `[project.scripts]` entry points, or `[tool.setuptools.package-data]` keys
2. **package.json**: Check `main`, `module`, or `exports` fields pointing to source directories
3. **composer.json**: Check `autoload.psr-4` namespace mappings

Return the actual package/module directory name that contains the application logic (not generic names like "src"). Print only the directory name without explanation.`"

You are an expert software architect/engineer.

### Pattern Analysis
`gemini -p "@{MAIN_DIRECTORY} Find all instances of the coding pattern described. {{args}}

1.  **Pattern Occurrences**: List all files containing this pattern with specific line references.
2.  **Implementation Variations**: Show the different ways this pattern is implemented (good and bad).
3.  **Code Examples**: Provide 3-5 representative examples of the pattern in use.
4.  **Usage Context**: Explain where and why this pattern is used.
5.  **Quality Assessment**: Analyze the overall quality, maintainability, and performance of the implementations.
6.  **Recommendations**: Suggest standardization, refactoring, or alternative patterns.

Provide specific file paths and line numbers for all examples."`

---

Carefully review the Pattern Analysis, correct any formatting issues, and display in properly formatted **Markdown**. 

Then **hard stop**.
"""
